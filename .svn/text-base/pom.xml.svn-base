<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.amnesty</groupId>
	<artifactId>amp-aicore</artifactId>
	<packaging>amp</packaging>
	<name>Amnesty Core AMP Project</name>
  	<version>1.0.9-SNAPSHOT</version>
	<description>Provides customizations of the webclient and core extensions</description>

	<repositories>
				<repository>
					<id>ai-public</id>
					<url>https://forge.amnesty.org/maven/repos/public</url>
				</repository>
				<repository>
					<id>ai-internal</id>
					<url>https://forge.amnesty.org/maven/repos/internal</url>
				</repository>
				
				<repository>
                <id>spring-extensions-milestone</id>
                <name>Spring Extensions Milestone Repository</name>
                <url>http://extensions.springframework.org/milestone</url>
        </repository>
    	<repository>
                <id>spring-extensions-snapshot</id>
                <name>Spring Extensions Snapshot Repository</name>
                <url>http://extensions.springframework.org/snapshot</url>
        </repository>
	</repositories>
	
	<pluginRepositories>
	  <pluginRepository>
	    <id>codehaus repository</id>
	    <url>http://repository.codehaus.org/</url>
	  </pluginRepository>
	  <pluginRepository>
			<id>Maven2 Repository</id>
			<url>http://repo1.maven.org/maven2/</url>
		</pluginRepository>
		<pluginRepository>
					<id>ai-public</id>
					<url>https://forge.amnesty.org/maven/repos/public</url>
				</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
				<repository>
						<id>ai-internal</id>
						<url>
								dav:https://forge.amnesty.org/maven/repos/internal
						</url>
				</repository>
	</distributionManagement>

	<scm>
			<connection>scm:svn:https://svn.amnesty.org/repos/apps/aidoc/trunk/amp-aicore</connection>
			<developerConnection>scm:svn:https://${maven.username}@svn.amnesty.org/repos/apps/aidoc/trunk/amp-aicore</developerConnection>
			<url>https://svn.amnesty.org/repos/apps/aidoc/trunk/amp-aicore</url>
	</scm>

	<properties>
		<!--Default for which src/main/properties/<env>/application.properties is loaded. NB: 
			used only for the 'test' profile (e.g. '-P test' on the mvn commandline)
			jetty run deployment, does not impact AMP behavior which is typically environment independent
		-->
		<env>local</env>
		<!-- Webapp used to test/develop locally the AMP -->
		<webapp.name>amp-aicore-webapp</webapp.name>
		<!-- 
			| 
			| By default the src/test/properties/local/application.properties uses the property "alfresco.data.location" to  specify where
			| alf_data gets created.
			| For local jetty:run deployment default creation dir is under project root folder (as location is specified relatively to run 			
			| dir). Please add alf_data_jetty in svn/cvs ignores in order not to commit that. You can also specified a different (out of the 	
			| sproject) folder
			| by editing the following properties.
			| DB is also configurable here. Of course keep in sync these two values otherwise you'll get integrity errors.
			| 
			| Empty log dir creates file alfresco.log in appserver default dir. You can also specify a meaningful log directory for the server
			| (add a trailing slash, e.g. '/var/log/alfresco/' ) 
			|
			| Jetty embedded run logs by default in target/alfresco.log 
		-->
		<alfresco.data.location>./alf_data</alfresco.data.location>
		<alfresco.db.url>jdbc:mysql://localhost/${alfresco.db.name}</alfresco.db.url>
		<alfresco.db.username>alfresco</alfresco.db.username>
		<alfresco.db.password>alfresco</alfresco.db.password>
		<alfresco.groupId>alfresco.enterprise</alfresco.groupId>
		<alfresco.version>3.3.3</alfresco.version>
		<amp.release.id>aicore</amp.release.id>
		<amp.release.number>1.0.9</amp.release.number>
		<webapp.log.level>error</webapp.log.level>
		<webapp.log.dir>${project.build.directory}/</webapp.log.dir>
		<!--  End of testing webapp specific properties -->
		<!--  Module specific build time properties -->
		<module.log.level>debug</module.log.level>
	</properties>
	
	<!-- 
		need to list these as a provided so that Maven doesn't download them
		and include them in the AMP, they are provided by Alfresco
	-->
	<dependencies>
	<dependency>
            <groupId>org.springframework.extensions.surf</groupId>
            <artifactId>spring-surf-api</artifactId>
            <version>1.0.0.M3</version>
            <type>jar</type>
            <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
			<scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>htmlunit</groupId>
      <artifactId>htmlunit</artifactId>
      <version>1.13</version>
			<scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
			<scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.1</version>
			<scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty-ant</artifactId>
      <version>6.1.5</version>
			<scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty-util</artifactId>
      <version>6.1.5</version>
			<scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.12</version>
      <scope>provided</scope>
	</dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-mock</artifactId>
      <version>2.0.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${alfresco.groupId}</groupId>
      <artifactId>alfresco-all</artifactId>
      <version>${alfresco.version}</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
		<dependency>
			<groupId>${alfresco.groupId}</groupId>
			<artifactId>alfresco-web-service-client</artifactId>
			<version>${alfresco.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>acegisecurity</groupId>
			<artifactId>acegi-security</artifactId>
			<version>0.8.2</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-mock</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jdbc</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-dao</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-remoting</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-support</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
				    <artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>	
		<dependency>
		  <groupId>javax.xml</groupId>
		  <artifactId>jaxrpc-api</artifactId>
		  <version>1.1</version>
		  <scope>test</scope>
		</dependency> 	
		<dependency>
			<groupId>commons-discovery</groupId>
			<artifactId>commons-discovery</artifactId>
			<version>0.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>wsdl4j</groupId>
			<artifactId>wsdl4j</artifactId>
			<version>1.6.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.ws.commons.schema</groupId>
			<artifactId>XmlSchema</artifactId>
			<version>1.4.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId> 
			<artifactId>pdfbox</artifactId> 
			<version>0.8.0-incubating</version> 
			<scope>provided</scope>
		</dependency> 
		<dependency>
		    <groupId>portlet-api</groupId>
		    <artifactId>portlet-api</artifactId>
		    <version>1.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf</groupId>
			<artifactId>gsa-japi</artifactId>
			<version>1.10</version>
		</dependency>
		 <dependency>
		 <groupId>com.google.gdata</groupId>
		 <artifactId>gdata-client</artifactId>
		 <version>1.0</version>
		 </dependency>
		 <dependency>
		 <groupId>com.google.gdata</groupId>
		 <artifactId>gdata-client-meta</artifactId>
		 <version>1.0</version>
		 </dependency>		
		 <dependency>
		 <groupId>com.google.gdata</groupId>
		 <artifactId>gdata-core</artifactId>
		 <version>1.0</version>
		 </dependency>
		 <dependency>
		 <groupId>com.google.gdata</groupId>
		 <artifactId>gdata-gsa</artifactId>
		 <version>1.0</version>
		 </dependency>
		 <dependency>
		 <groupId>com.google.gdata</groupId>
		 <artifactId>gdata-gsa-meta</artifactId>
		 <version>1.0</version>
		 </dependency>	
	</dependencies>
	
	<build>
		<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.5</source>
						<target>1.5</target>
					</configuration>
				</plugin>
				<!--plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<executions>
						<execution>
							<phase>validate</phase>
							<goals>
								<goal>create</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<doCheck>false</doCheck>
						<doUpdate>false</doUpdate>
					</configuration>
				</plugin-->
				<plugin>
					<groupId>org.alfresco.maven.plugin</groupId>
					<artifactId>maven-amp-plugin</artifactId>
					<version>3.0.0</version>
					<extensions>true</extensions>
					<configuration>
					    <mAmpJarExcludes>alfresco/module/**, alfresco/extension/**,
					alfresco/messages/**,alfresco/templates/**,alfresco/bootstrap/**,alfresco/*.xml</mAmpJarExcludes>
					    <archive>
								<addMavenDescriptor>false</addMavenDescriptor>
							</archive>
					</configuration>
				</plugin>    
		</plugins>
		<!-- Copies and filters resources in build folder so maven-amp-plugin can pick them up  -->
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**README-*</exclude>
				</excludes>
			</resource>
			<!-- Copies and filters AMP config in the proper package 'alfresco/module/modulegroup.modulename' so to enforce 
				 full module naming single sourcing from POM properties  -->
			<resource>
				<filtering>true</filtering>
				<directory>src/main/config</directory>
				<targetPath>alfresco/module/aicore</targetPath>
				<excludes>
					<exclude>**README-*</exclude>
				</excludes>
			</resource>
		</resources>
  </build>
  
  <profiles>
			<!-- Profile used to trigger war creation and integration within Jetty embedded -->
			
			<!-- Profile used to trigger war creation -->
			<profile>
				<id>preparetestwar</id>
				<build>
					<filters><filter>src/test/properties/${env}/application.properties</filter></filters>
					<defaultGoal>package</defaultGoal>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<executions>
								<execution>
									<id>unpack-amps</id>
									<phase>process-resources</phase>
									<goals>
										<goal>unpack-dependencies</goal>
									</goals>
									<configuration>
										<includeTypes>amp</includeTypes>
										<outputDirectory>${project.build.directory}/${webapp.name}</outputDirectory>
										<excludes>META*</excludes>
									</configuration>
								</execution>
							</executions>
							<dependencies>
								<!-- This is required to be re-defined explicitly at plugin level as otherwise the 'amp' extension
									unArchiver won't be available to the maven-dependency-plugin  -->
								<dependency>
									<groupId>org.alfresco.maven.plugin</groupId>
									<artifactId>maven-amp-plugin</artifactId>
									<version>3.0.0</version>
								</dependency>
							</dependencies>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-war-plugin</artifactId>
							<executions>
								<!-- Runs war packaging when 'integration-test' phase is called -->
								<execution>
									<id>it</id>
									<phase>package</phase>
									<goals>
										<goal>exploded</goal>
									</goals>
									<configuration>
									   <archiveClasses>true</archiveClasses>
									</configuration>
								</execution>
							</executions>
							<configuration>
								<primaryArtifact>false</primaryArtifact>
								<!-- Don't remove the following line otherwise WAR and AMP builds will be done in the same folder, with unexpected results -->
								<webappDirectory>${project.build.directory}/${webapp.name}</webappDirectory>
								<archive>
									<addMavenDescriptor>false</addMavenDescriptor>
								</archive>
								<warSourceExcludes>licenses/**</warSourceExcludes>
								<webResources />
								<webResources>
									<resource>
										<directory>${project.build.testOutputDirectory}</directory>
										<targetPath>WEB-INF/classes</targetPath>
										<filtering>true</filtering>
										<includes>
											<include>**</include>
										</includes>
									</resource>
									<!-- Here we add default this AMP web/ resources-->
									<resource>
										<directory>src/main/webapp</directory>
										<targetPath>WEB-INF/licenses</targetPath>
										<includes>
											<include>licenses/*.*</include>
										</includes>
										<filtering>false</filtering>
									</resource>
								</webResources>
							</configuration>
							<dependencies>
								<!-- This is required to be re-defined explicitly at plugin level as otherwise the 'amp' extension
									unArchiver won't be available to the maven-war-plugin  -->
								<dependency>
									<groupId>org.alfresco.maven.plugin</groupId>
									<artifactId>maven-amp-plugin</artifactId>
									<version>3.0.0</version>
								</dependency>
							</dependencies>
						</plugin>
					</plugins>
					<!-- When invoking 'mvn integration-test', the following alf configs are added to the test war in order to be able to run it seamlessly.
						NB: the application.properties file is filtered with alfresco.db.name and alf.data.location POM properties as default configuration
					-->
					<testResources>
						<testResource>
							<filtering>true</filtering>
							<directory>src/test/resources</directory>
						</testResource>
						<!-- Includes default properties  for alfresco test war -->
						<testResource>
							<filtering>true</filtering>
							<directory>src/test/properties/${env}</directory>
							<targetPath>alfresco/extension</targetPath>
						</testResource>
						<!-- src/main/config/ is copied into  ==> target/test-classes/alfresco/module/org.amnesty.amp-aicore to
							be picked up by the maven-war plugin
							Best practice tacken from recordsmanagement.amp, is enforced troughout the whole archetype. 
							This convention is also used for module.properties filtering.
						-->
						<testResource>
							<filtering>true</filtering>
							<directory>.</directory>
							<includes>
								<include>module.properties</include>
							</includes>
							<targetPath>alfresco/module/aicore</targetPath>
						</testResource>
					</testResources>
				</build>
				<!-- Here you can add test dependencies you want to have included in the the WAR (not in the AMP, built in the main profile) 
					|
					| Typical use case: add here additional AMPs that you want to test compatibility of with the current module
					|
				-->
				<dependencies>
					<!--  BEGIN.  Used by amnesty tests -->
					<dependency>
					  <groupId>javax.xml</groupId>
					  <artifactId>jaxrpc-api</artifactId>
					  <version>1.1</version>
					  <scope>test</scope>
					</dependency> 				
					<!--  END. Used by amnesty tests -->
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.12</version>
						<scope>runtime</scope>
					</dependency>
				
					<!-- This is the alfresco version you're testing the AMP against. Don't remove if you want jetty to be able to deploy a WAR :) -->
					<dependency>
						<groupId>${alfresco.groupId}</groupId>
						<artifactId>alfresco</artifactId>
						<version>${alfresco.version}</version>
						<type>war</type>
					</dependency>
				</dependencies>
			</profile>	

			<profile>
				<id>ci</id>
				<build>
					<filters><filter>src/test/properties/${env}/application.properties</filter></filters>
					<defaultGoal>jetty:run-exploded</defaultGoal>
					<plugins>
						<plugin>
							<groupId>org.mortbay.jetty</groupId>
							<artifactId>maven-jetty-plugin</artifactId>
							<executions>
			                    <execution>
			                        <id>start-jetty</id>
			                        <phase>pre-integration-test</phase>
			                        <goals>
			                            <goal>run-exploded</goal>
			                        </goals>
			                        <configuration>
			                        	<contextPath>/${webapp.name}</contextPath>
										<webApp>${project.build.directory}/${webapp.name}</webApp>
			                            <scanIntervalSeconds>0</scanIntervalSeconds>
			                            <daemon>true</daemon>
			                            <connectors>
											<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
												<port>8888</port>
												<maxIdleTime>60000</maxIdleTime>
											</connector>
										</connectors>
			                        </configuration>
			                    </execution>
			                    <execution>
			                        <id>stop-jetty</id>
			                        <phase>post-integration-test</phase>
			                        <goals>
			                            <goal>stop</goal>
			                        </goals>
			                    </execution>
							</executions>
						</plugin>
						
			            <!-- Surefire Tests -->
			            <plugin>
			                <groupId>org.apache.maven.plugins</groupId>
			                <artifactId>maven-surefire-plugin</artifactId>
			                <configuration>
			                    <skip>true</skip>
			                </configuration>
			                <executions>
			                    <execution>
			                        <phase>integration-test</phase>
			                        <goals>
			                            <goal>test</goal>
			                        </goals>
			                        <configuration>
			                            <skip>false</skip>
			                        </configuration>
			                    </execution>
			                </executions>
			            </plugin>						
					</plugins>
				</build>
			</profile>	

			<profile>
				<id>webapp</id>
				<build>
					<filters><filter>src/test/properties/${env}/application.properties</filter></filters>
					<defaultGoal>jetty:run-exploded</defaultGoal>
					<plugins>
						<plugin>
							<groupId>org.mortbay.jetty</groupId>
							<artifactId>maven-jetty-plugin</artifactId>
							<executions>
								<!-- Runs jetty when 'integration-test' phase is called -->
								<execution>
									<id>it</id>
									<phase>pre-integration-test</phase>
									<goals>
										<goal>run-exploded</goal>
									</goals>
									<configuration>
										<contextPath>/${webapp.name}</contextPath>
										<webApp>${project.build.directory}/${webapp.name}</webApp>
										<scanIntervalSeconds>10</scanIntervalSeconds>
										<connectors>
											<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
												<port>8888</port>
												<maxIdleTime>60000</maxIdleTime>
											</connector>
										</connectors>
									</configuration>
								</execution>
							</executions>
						</plugin>					
					</plugins>
				</build>
			</profile>	

	</profiles>  

</project>
