<?xml version="1.0"?>
 
<project name="amp-aicore" default="test" basedir="." xmlns:artifact="urn:maven-artifact-ant">

  <property file="${user.home}/build.properties" />
  <property name="module.id" value="aicore" />

  <import file="test/scripts/build.xml" />

  <property name="project.dir" value="." />
  <property name="build.dir" value="${project.dir}/build" />
  <property name="webfiles.dir" value="${project.dir}/src/web" />
  <property name="config.dir" value="${project.dir}/src/config" />
  <property name="classes.dir" value="${build.dir}/classes" />
  <property name="test.scripts.dir" value="${project.dir}/test/scripts" />
  <property name="test.resources.dir" value="${project.dir}/test/resources" />

  <property name="bootstrap.dir" value="${config.dir}/alfresco/module/aicore/bootstrap" />
  <property name="webapp.dir" value="${jetty.home}/webapps/alfresco" />
  <property name="webservice.client.dir" value="${project.dir}/test/web-service-client" />

  <property name="jar.file" value="${build.dir}/lib/${ant.project.name}.jar" />
  <property name="amp.file" value="${build.dir}/dist/${ant.project.name}.amp" />
  <property name="clean.war" value="${alfresco.home}/downloads/current/alfresco.war" />
  <property name="test.war" value="${build.dir}/test/alfresco.war" />

  <property name="test.port" value="8888" />
  <property name="test.host" value="localhost" />
  <property name="jetty.stop.port" value="8079" />

  <typedef resource="org/apache/maven/artifact/ant/antlib.xml" classpath="lib/maven-ant-tasks-2.0.9.jar" uri="urn:maven-artifact-ant" />
  <artifact:pom id="project.pom" file="pom.xml" />

  <!-- Dependent library file sets -->
  <artifact:dependencies filesetId="dependency.fileset" pomrefid="project.pom" useScope="runtime"/>
  <artifact:dependencies filesetId="test.dependency.fileset" pomrefid="project.pom" useScope="test"/>

  <path id="class.path">
    <dirset dir="${classes.dir}" />
    <fileset refid="dependency.fileset" />
    <fileset dir="lib" includes="**/*.jar" />
    <fileset dir="${webservice.client.dir}" includes="**/*.jar" />
  </path>

  <path id="test.class.path">
    <path refid="class.path" />
    <fileset refid="test.dependency.fileset" />
    <dirset dir="${test.resources.dir}" />
  </path>

  <target name="clean">
    <delete dir="${build.dir}" />
  </target>

  <target name="mkdirs">
    <mkdir dir="${build.dir}/dist" />
    <mkdir dir="${build.dir}/lib" />
    <mkdir dir="${build.dir}/classes" />
    <mkdir dir="${build.dir}/web/WEB-INF/classes" /> 
  </target>

  <!-- AIDOC-204: compile aicore classes, test classes and patches under org/alfresco (AIDOC-204) -->
  <target name="compile" depends="mkdirs">
    <javac classpathref="class.path" srcdir="${project.dir}/src/main/java" destdir="${build.dir}/classes" debug="true"/>
    <javac classpathref="test.class.path" srcdir="${project.dir}/test/java" destdir="${build.dir}/classes" debug="true"/>
    <javac classpathref="class.path" includes="**/org/alfresco/**/*.java" srcdir="${project.dir}/src/main/java" destdir="${build.dir}/web/WEB-INF/classes" debug="true" />
  </target>

  <target name="package-jar" depends="compile">
    <jar destfile="${jar.file}">
      <fileset dir="${build.dir}/classes" excludes="**/custom*,**/*Test*" includes="**/org/amnesty/**/*.class" />
      <fileset dir="${project.dir}/src/main/java" includes="META-INF/*.*" />
    </jar>
  </target>

  <target name="package-amp" depends="package-jar" description="Package the Module">
    <zip destfile="${amp.file}">
      <fileset dir="${project.dir}/build" includes="lib/*.jar" />
      <fileset dir="${project.dir}/src" includes="config/**/*.*" excludes="**/module.properties" />
      <fileset dir="${project.dir}/src" includes="web/**/*.*" />
      <fileset dir="${config.dir}/alfresco/module/${module.id}" includes="module.properties" />
      <fileset file="${project.dir}/file-mapping.properties" />
    </zip>
  </target>

  <target name="install" depends="package-amp" description="Install amp to repository">
    <artifact:install file="${amp.file}">
      <pom refid="project.pom" />
      <attach file="${jar.file}" type="jar" />
    </artifact:install>
  </target>

  <target name="eclipse-builder">
    <echo>Installing files from ${webfiles.dir} to ${webapp.dir}</echo>
    <copy todir="${webapp.dir}/WEB-INF/classes" overwrite="true">
      <fileset dir="${config.dir}" />
      <fileset dir="${basedir}/bin" excludes="**/*Test.class" />
    </copy>
    <copy todir="${webapp.dir}/" overwrite="true">
      <fileset dir="${webfiles.dir}" includes="jsp/**/*.*,images/**/*.*,css/**/*.*,forms/**/*.*" />
    </copy>
  </target>

  <!--
       Regression testing targets. Deploys to jetty at http://${test.host}:${test.port}/alfresco
    -->

  <target name="test" depends="package-test-war, test-deploy, rebuild_db_test" description="Main test target which calls setup tasks and then test-run">
    <antcall target="jetty-start" />
    <antcall target="test-run" />
    <antcall target="jetty-stop" />
  </target>

  <target name="test-run" description="Runs the tests">
    <property name="test.reports.dir" value="${build.dir}/test-reports" />
    <mkdir dir="${test.reports.dir}" />

    <property name="aidoc.propfile" value="${test.resources.dir}/aidoc-service.properties" />
    <move file="${aidoc.propfile}" tofile="${aidoc.propfile}.saved" />
    <propertyfile file="${aidoc.propfile}">
      <entry key="alfresco.server.host" value="${test.host}" />
      <entry key="alfresco.server.port" value="${test.port}" />
    </propertyfile>

    <junit printsummary="yes" fork="yes">
      <jvmarg value="-Dalfresco.server.port=${test.port}" />
      <jvmarg value="-Dalfresco.server.host=${test.host}" />
      <classpath refid="test.class.path" />
      <formatter type="xml" />
      <batchtest todir="${test.reports.dir}">
        <fileset dir="${classes.dir}">
          <include name="**/*Test.class" />
        </fileset>
      </batchtest>
    </junit>

    <move file="${aidoc.propfile}.saved" tofile="${aidoc.propfile}" />
  </target>

  <target name="test-deploy">
    <delete dir="${jetty.home}/webapps/alfresco" />
    <unjar dest="${jetty.home}/webapps/alfresco" src="${test.war}" />
  </target>

  <target name="package-test-war" description="Build test war using amps" depends="package-amp">
    <!-- Copy all dependent amps to a directory -->
    <property name="test.dep.dir" value="${build.dir}/test/dependencies" />
    <delete dir="${test.dep.dir}" />
    <mkdir dir="${test.dep.dir}" />
    <copy todir="${test.dep.dir}">
      <fileset refid="dependency.fileset" />
      <fileset file="${amp.file}" />
    </copy>

    <!-- Build war installing each dependent amp using the module mgt. tool -->
    <delete file="${test.war}" />
    <copy tofile="${test.war}" file="${clean.war}" />

    <exec executable="java" dir=".">
      <arg value="-jar" />
      <arg value="test/scripts/lib/alfresco-mmt-2.1.0R1.jar" />
      <arg value="install" />
      <arg value="${test.dep.dir}" />
      <arg value="${test.war}" />
      <arg value="-directory" />
      <arg value="-force" />
      <arg value="-verbose" />
      <arg value="-nobackup" />
    </exec>

    <copy file="test/web/WEB-INF/classes/alfresco/extension/custom-repository.properties.template" tofile="test/web/WEB-INF/classes/alfresco/extension/custom-repository.properties" />
    <propertyfile file="test/web/WEB-INF/classes/alfresco/extension/custom-repository.properties">
      <entry key="dir.root" value="${alfresco.home}/data/test" />
    </propertyfile>

    <war destfile="${test.war}" update="true">
      <fileset dir="test/web" includes="WEB-INF/**" />
      <!-- AIDOC-204: patch authentication bug -->
      <fileset dir="build/web" includes="WEB-INF/**" />
    </war>
  </target>

  <target name="jetty-start">
    <java jar="${jetty.home}/start.jar" dir="${jetty.home}" fork="true" spawn="true">
      <jvmarg value="-Xmx512m" />
      <jvmarg value="-Djetty.port=${test.port}" />
      <jvmarg value="-Djetty.home=${jetty.home}" />
      <jvmarg value="-Dfile.encoding=UTF-8" />
      <jvmarg value="-DSTOP.PORT=${jetty.stop.port}" />
      <jvmarg value="-DSTOP.KEY=secret" />
    </java>

    <waitfor maxwait="25" maxwaitunit="minute" checkevery="10" checkeveryunit="second" timeoutproperty="jetty.start.failed">
      <and>
        <http url="http://${test.host}:${test.port}/alfresco" />
      </and>
    </waitfor>

    <antcall target="handle-jetty-start-failure" />

    <fail if="jetty.start.failed" message="Failed to start jetty server. Check the file alfresco.log." />
  </target>

  <target name="handle-jetty-start-failure" if="jetty-start-failed">
    <antcall target="jetty-stop" />
  </target>

  <target name="jetty-stop" depends="jetty-check-status" if="jetty.started">
    <java jar="${jetty.home}/start.jar" fork="true" dir="${jetty.home}">
      <jvmarg value="-DSTOP.PORT=${jetty.stop.port}" />
      <jvmarg value="-DSTOP.KEY=secret" />
      <arg value="--stop" />
    </java>
  </target>

  <target name="jetty-check-status">
    <condition property="jetty.started">
      <socket server="${test.host}" port="${jetty.stop.port}" />
    </condition>
  </target>

</project>